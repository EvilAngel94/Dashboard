plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'groovy'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'jacoco'
}

group = 'purple.lemon'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

sourceSets {
    main.java.srcDirs = ['src/main/java']
    main.kotlin.srcDirs = ['src/main/kotlin']
    main.resources.srcDirs = ['src/main/resources']
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testImplementation 'org.springframework.batch:spring-batch-test'

    testImplementation 'org.codehaus.groovy:groovy-all:2.5.10'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

// Test phase, jacocoTestReports will be generated after the tests have ran.
test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

codeCoverage = 'CodeCoverage'

// Test are required to run before generating the report
jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled(true)
        csv.enabled(false)
        html.enabled(false)
    }
    //TODO: fix dit en maak dit in een nieuwe task (Zal er al beter uitzien dan)
    doLast {
        copy {
            from "${buildDir}/CodeCoverage/test"
            if (!file("${codeCoverage}").exists()) {
                mkdir("${codeCoverage}")
            }
            into "${codeCoverage}"
        }
    }
}

jacoco {
    toolVersion = "0.8.5"
    reportsDir = file("${buildDir}/CodeCoverage")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
